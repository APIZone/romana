#!/bin/bash
log_message() {
        printf "$(date +"%Y-%m-%d %H:%M:%S") (%s)%s\n" "${0##*/}" "$(printf " %s" "$@")"
}

log_verbose() {
        if ((verbose)); then
                log_message "$@"
        fi
}

verbose=0
while (( $# > 0 )) && [[ "$1" = -* ]]; do case "$1" in
-v|--verbose)
	verbose=1
	shift 1
	;;
-*)
	log_message "Unknown option '$1'"
	exit 1
	;;
esac; done

if (( $# == 0 )); then
	log_message "No deployment to create."
	exit 1
fi

if ! result=$(kubectl run "$@" 2>&1); then
	log_message "kubectl run failed"
	log_verbose "$result"
	exit 1
fi
log_verbose "kubectl run: $result"

if ! result=$(kubectl get deployment "$1" -o name 2>&1); then
	log_message "kubectl get deployment failed"
	log_verbose "$result"
	exit 1
fi
log_verbose "kubectl get deployment: $result"

intervals=(1 1 2 5 8 15 15 15 15 15)
status=unknown
for i in "${intervals[@]}"; do
	{ read -r replicas; read -r available; } < <(kubectl get deployment "$1" -o json | jq '.spec.replicas, .status.availableReplicas')
	if [[ "$replicas" ]] && ! [[ "$replicas" = "null" ]] && [[ "$available" ]] && ! [[ "$available" = "null" ]]; then
		if (( replicas == available )); then
			status="ok"
			log_verbose "Deployment created successfully. $available / $replicas running."
			break
		fi
		log_verbose "$available/$replicas ready"
		status="$available / $replicas running"
	fi
	log_verbose "Rechecking in $i seconds"
	sleep "$i"
done

log_verbose "Deleting 'deployments/$1'"
kubectl delete deployment "$1" &>/dev/null

if [[ "$status" == "ok" ]]; then
	log_message "All OK."
else
	log_message "Incomplete. Last status: $status"
	exit 1
fi
