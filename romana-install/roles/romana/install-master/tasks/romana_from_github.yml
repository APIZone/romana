- name: Download Go
  get_url: url="{{ go_url }}" checksum="sha1:{{ go_sha1 }}" dest="/var/tmp/go{{ go_version }}.tar.gz"
  register: dl

- name: Install Go
  become: true
  become_user: root
  unarchive: copy=no src="/var/tmp/go{{ go_version }}.tar.gz" dest="/usr/local"
  when: dl.changed

- name: Create GOPATH directory
  file: path="/var/tmp/gopath" mode=0775 state=directory

- name: Clone romana core repo into GOPATH
  git: repo="{{ romana_core_repo }}" version="{{ romana_core_branch }}" dest="/var/tmp/gopath/src/github.com/romana/core" key_file="{{ github_key is defined | ternary('~/.ssh/github_id_rsa', omit) }}" ssh_opts={{ git_ssh_options }}

- name: Copy a build core script
  copy: src="build_romana_core" dest="/var/tmp/build_romana_core" mode=0755

- name: Run the build core script
  shell: /var/tmp/build_romana_core

- name: Install files
  become: true
  become_user: root
  command: install -o root -g root -m 0755 "/var/tmp/gopath/bin/{{ item }}" "{{ romana_bin_dir }}/{{ item }}"
  with_items:
    - ipam
    - root
    - tenant
    - topology
    - romana
    - policy
    - watchnodes
 
- name: Install romana command line config file
  template: src="config/romana.yaml" dest="/home/{{ ansible_ssh_user }}/.romana.yaml" mode=0644

- name: Update user environment for Go Development
  blockinfile:
    dest: "~/.profile"
    block: |
      # Go Development settings
      if [ -d "/usr/local/go/bin" ]; then
          export GOPATH=/var/tmp/gopath
          PATH="$PATH:/usr/local/go/bin"
      fi
  when: ansible_distribution|lower == "ubuntu"

- name: Update user environment for Go Development
  blockinfile:
    dest: "~/.bash_profile"
    block: |
      # Go Development settings
      if [ -d "/usr/local/go/bin" ]; then
          export GOPATH=/var/tmp/gopath
          PATH="$PATH:/usr/local/go/bin"
      fi
  when: ansible_distribution|lower == "centos"
