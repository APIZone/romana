#!/bin/bash

# Copyright (c) 2016 Pani Networks
# All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may
# not use this file except in compliance with the License. You may obtain
# a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.

if (($# != 1)); then
	echo "expected 1 parameter (branch/tag to build)"
	exit 1
fi
if ! [[ -d "/go/src/github.com/romana/core/.git" ]]; then
	git clone https://github.com/romana/core /go/src/github.com/romana/core
fi
if ! git -C /go/src/github.com/romana/core fetch; then
	echo "failed to fetch"
	exit 1
fi
if ! git -C /go/src/github.com/romana/core checkout "$1"; then
	echo "failed to checkout '$1'"
	exit 1
fi
if [[ "$(git -C /go/src/github.com/romana/core symbolic-ref --short -q HEAD)" ]] && ! git -C /go/src/github.com/romana/core pull; then
	echo "failed to pull"
	exit 1
fi
git -C /go/src/github.com/romana/core submodule update --init --recursive
go get -d github.com/romana/core/...
while IFS= read -r p; do pkgs+=("$p"); done < <(go list -f '{{ if eq .Name "main" }}{{ .ImportPath }}{{ end }}' github.com/romana/core/... | grep -v /vendor/)
go install "${pkgs[@]}"
go get github.com/aws/aws-sdk-go/...
go install kube-cni-proxy fix-ec2-srcdestcheck romana-aws

if ! [[ -d "/kube/.git" ]]; then
	git clone https://github.com/romana/kube /kube
fi
if ! git -C /kube checkout "$1"; then
	echo "failed to checkout '$1'"
	exit 1
fi

if ! [[ -d "/romana/.git" ]]; then
	git clone https://github.com/romana/romana /romana
fi
if ! git -C /romana checkout "$1"; then
	echo "failed to checkout '$1'"
	exit 1
fi
