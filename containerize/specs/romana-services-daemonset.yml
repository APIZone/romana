apiVersion: extensions/v1beta1
kind: DaemonSet
metadata:
  name: romana-services
  namespace: kube-system
spec:
  template:
    metadata:
      labels:
        app: romana-services
    spec:
      nodeSelector:
        # To ensure this runs only on the master node, a nodeSelector is used.
        # The label and value specified should only match the master node
        # in your environment.
        # Eg:
        # kubernetes.io/role: master                 # label used by kops
        # kubeadm.alpha.kubernetes.io/role: master   # label used by kubeadm
        placeholder-label: master
      hostNetwork: true
      containers:
      - name: romana-etcd
        image: gcr.io/google_containers/etcd-amd64:3.0.17
        command:
        - etcd
        - "--listen-client-urls=http://127.0.0.1:12379"
        - "--listen-peer-urls=http://127.0.0.1:12380"
        - "--advertise-client-urls=http://127.0.0.1:12379"
        - "--data-dir=/var/etcd/data"
        volumeMounts:
        - name: etcd-data
          mountPath: "/var/etcd/data"
        livenessProbe:
          httpGet:
            path: "/health"
            port: 12379
            host: 127.0.0.1
          initialDelaySeconds: 15
          timeoutSeconds: 15
      - name: romana-datastore
        image: mysql:5
        env:
        - name: MYSQL_ROOT_PASSWORD
          value: romana
        volumeMounts:
        - name: mysql-data
          mountPath: /var/lib/mysql
      - name: romana-services
        image: quay.io/romana/services:v1.5.0-rc.1
        imagePullPolicy: Always
        args:
        - --cidr=100.112.0.0/12
        env:
        - name: MYSQL_ROOT_PASSWORD
          value: romana
        volumeMounts:
        - name: log-path
          mountPath: /var/log/romana
      volumes:
      - name: etcd-data
        hostPath:
          path: "/var/lib/romana/etcd-db"
      - name: mysql-data
        hostPath:
          path: "/var/lib/romana/mysql-db"
      - name: log-path
        hostPath:
          path: /var/log/romana
